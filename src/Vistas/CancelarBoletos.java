/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vistas;

import Entity.Entrada;
import Entity.Persistencia;
import Entity.Presentacion;
import Entity.Persona;
import Entity.Usuario;
import Entity.EnumeracionStatus;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jpaController.EntradaJpaController;

/**
 *
 * @author juanm
 */
public class CancelarBoletos extends javax.swing.JPanel {
    
    private Persistencia persis;
    private EntradaJpaController entradaCtrl;
    private DefaultTableModel modelo;
    private EntityManagerFactory emf;
    /**
     * Creates new form CancelarBoletos
     */
     public CancelarBoletos() {
        initComponents();
        persis = new Persistencia();
        emf = persis.getEmf();
        entradaCtrl = new EntradaJpaController(emf);

        cargarBoletosComprados();
    }
      private void cargarBoletosComprados() {
        modelo = new DefaultTableModel(
                new Object[]{"ID", "Presentación", "Escenario", "Precio", "Estatus"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // No editable
            }
        };

        try {
            Usuario usuario = Sesion.getUsuarioActual();
            if (usuario == null || usuario.getPersona() == null) {
                JOptionPane.showMessageDialog(this, "No hay usuario logueado.");
                return;
            }
            Persona persona = usuario.getPersona();

            List<Entrada> entradas = entradaCtrl.findEntradaEntities()
                    .stream()
                    .filter(e -> e.getIdPersona() != null
                    && e.getIdPersona().getIdPersona().equals(persona.getIdPersona())
                    && e.getIdStatus() != null
                    && e.getIdStatus().getIdStatus() == 3) // 3 = Pagada
                    .toList();

            for (Entrada e : entradas) {
                Presentacion p = e.getIdPresentacion();
                modelo.addRow(new Object[]{
                    e.getIdEntrada(),
                    p != null ? p.getTitulo() : "—",
                    p != null && p.getIdEscenario() != null ? p.getIdEscenario().getNombre() : "—",
                    p != null ? p.getCostoBase() : "—",
                    e.getIdStatus().getDescripcion()
                });
            }

            jTable1.setModel(modelo);

            // Ocultar ID
            if (jTable1.getColumnCount() > 0) {
                jTable1.getColumnModel().getColumn(0).setMinWidth(0);
                jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
                jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar boletos: " + e.getMessage());
            e.printStackTrace();
        }
    }
        private void cancelarBoleto() {
        int fila = jTable1.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Seleccione un boleto primero.");
            return;
        }

        try {
            int idEntrada = Integer.parseInt(modelo.getValueAt(fila, 0).toString());
            Entrada entrada = entradaCtrl.findEntrada(idEntrada);

            if (entrada == null) {
                JOptionPane.showMessageDialog(this, "Entrada no encontrada.");
                return;
            }

            EntityManager em = emf.createEntityManager();
            em.getTransaction().begin();
            EnumeracionStatus disponible = em.find(EnumeracionStatus.class, 1); // 1 = Disponible
            entrada.setIdStatus(disponible);
            entrada.setIdPersona(null);
            entradaCtrl.edit(entrada);
            em.getTransaction().commit();
            em.close();

            JOptionPane.showMessageDialog(this, "Boleto cancelado con éxito.");
            cargarBoletosComprados(); // refrescar la tabla

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cancelar boleto: " + e.getMessage());
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Boletos Comprados");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Aceptar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione el boleto que quiere cancelar y pulse aceptar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(65, 65, 65))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       cancelarBoleto();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cargarBoletosComprados();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
